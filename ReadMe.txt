USC � EE450 Introduction to Computer Network

ReadMe for WEB Registration (Socket Programming)

a) Name: Shivansh Amattya

b) Student ID: 5982564472

c)Work Done in the assignment :

* The project includes five modules: four servers, one client, and a Make file.
* serverM is the main server that coordinates with all and receives the input from the client.
* The received input is forwarded to the serverC which authenticates the user, and verifies the information from the text �Cred.txt�. 
* A total of three attempts are given to the user if fails to verify the client will shut down automatically. Else the user are given infinite queries to request.
* The user can inquire about Credits, Professors, Days, and CourseName of the desired coursecode.
*  The received queries received by the client are forwarded to the serverM which then forwards the query to the respective servers.
* serverEE contains all the information about the department EE.
* serverCS contains all the information about the department CS.
* serverM process the input and forward it to the serverCS/serverEE
* serverEE/serverCS provides the response against the query and forward it to the server which forwards the information to the client.
	

d)
* serverM-
o It is the main server that runs over UDP with port No: �24472� and a TCP with port no: �25472� that coordinates with all backend servers it responds to the request that is generated by all backend servers. 
o It receives the inputs username and password that are generated by the client and sends it for authentication to the serverC. 
o ServerM accepts the query generated from the client process it and forwards it
   to the regarded department 
   
* serverC-
o it is a Credential server and authenticates the identity of students 
o it has all the encrypted credentials for both inputs username and password which is provided in the text file�cred.txt�.
o The serverC runs over UDP with port No: �21472� and sends the authentication result back to the main server � serverM.

* ServerCS-
o It is one of the backend servers that runs over UDP with Port no-  �22472�.
o It receives the request from serverM and processes it.
o It verifies the data from the text file �CS.text� with the incoming input. 
o It sends the result to the main server(serverM) which forwards the message to the client .
* ServerEE-
o It is one of the backend servers that runs over UDP with Port no-  �23472�.
o It receives the request from serverM and process it.
o It verifies the data from the text file �EE.text� with the incoming input. 
o It sends the result to the main server(serverM) which forwards the message to the client.
* Client-
o Clients run over the dynamic port(TCP) and send the authentication to serverC for verification.
o it asks the user to enter a username and password for authentication.
o A total of three login attempts are given to the user for successful verification, if the user fails the client will automatically shut down.
o  Else inside an infinite loop user can ask the Query such as Coursecode:
o  Credits, Professor, Days, CourseName.
o Sends the query to the server and serverM forward the query to the respective servers.
* Makefile-
o It compiles and runs all the code together.
o No need to compile the entire program every time whenever you make a change


e)
* Client to serverM :

o Message Type: username, password
o Message Content: encrypt_username, encrypt_password
o Message Type: course code, query
o Message Content: courseCode_recieved, query_recieved
o Message Type: query 
o Message Content: Professor , Days, Credit , and CourseName

* serverM to serverC :

o Message Type: username, password
o Message Content: username.c_str(), password.c_str()
* serverC to serverM :
o Message Type: username, password
o Message Content: encrypt_username, encrypt_password

* serverM to serverCS :
o Message Type: course code, query
o Message Content: courseCode.c_str(), query.c_str()

*  serverCS to serverM :
o Message Type: course code, query
o Message Content: string courseCode, string query

* serverM to serverEE :
o Message Type: course code, query
o Message Content: courseCode.c_str(), query.c_str()

*  serverEE to serverM :
o Message Type: course code, query
o Message Content: string courseCode, string query

* serverM to Client:
o Message Type: username password
o Message Content: encrypt_username, encrypt_password
o Message Type: course code, query
o Message Content: string courseCode, string query


g)
* The code is perfectly running under the provided inputs.
* The casing of the input should match the displayed message.
* All the Course code, Professor , Days, Credit , and CourseName should be entered like EE450 and CS100, Professor, Days 
* It will not accept inputs like ee450,cs100, days, ProFessor etc.


h)Code Reused:
* https://beej.us/guide/bgc/
* https://beej.us/guide/bgnet/
* https://www.youtube.com/watch?v=LiyMDucaq2k
* https://www.tutorialspoint.com/cplusplus-program-to-implement-caesar-cypher
	



